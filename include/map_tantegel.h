#ifndef	MAP_TANTEGEL_H
#define MAP_TANTEGEL_H

// This header file contains the map info for Tantegel

// Map Dimensions
const int cnTantegelMapWidth   = 61;
const int cnTantegelMapHeight  = 68;


// Map Declarations
int nTantegelMapArray[cnTantegelMapHeight][cnTantegelMapWidth] = {
    // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  3,  2,  2,  2,  2,  2,  2,  2,  3,  2,  2,  2,  3,  4,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  2,  3,  4,  3,  4,  4,  3,  4,  3,  2,  1,  1,  1,  1,  1,  2,  3,  2,  1,  2,  3,  3,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  2,  3,  3,  3,  3,  3,  3,  3,  3,  2,  1,  1,  1,  1,  1,  2,  3,  2, 11,  2,  3,  3,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  2,  1,  1,  2,  2,  2,  2,  1,  1,  2,  2,  2,  2,  1,  1,  2,  1,  1,  2,  3,  3,  3,  4,  4,  3,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  3,  4,  4,  4,  3,  3,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1,  1,  2,  3,  3,  3,  3,  3,  3,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  2,  2,  2,  2,  1,  2,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2, 10,  2,  2,  2,  2,  2,  1,  2,  2,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  2,  1,  2, 15,  1,  1,  1,  1,  1,  2,  1,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  2,  1,  2,  2,  2,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  2,  2,  2,  2,  1,  2,  4,  4,  1,  1,  1,  1,  4,  4,  2,  1,  1,  2,  1,  1,  2,  1,  1,  2,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  2,  1,  2,  4,  4,  1,  1,  1,  1,  4,  4,  2,  1,  1,  2,  1,  1,  2,  1,  1,  2,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  2,  1,  2,  4,  3,  1,  1,  1,  1,  3,  4,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1, 10,  1,  2,  3,  3,  1,  1,  1,  1,  3,  3,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  2,  1,  2,  3,  3,  1,  1,  1,  1,  3,  3,  2,  1,  1,  2,  1,  1,  2,  1,  1,  2,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  2,  1,  2,  3,  1,  1,  1,  1,  1,  1,  3,  2,  1,  1,  2,  1,  1,  2,  1,  1,  2,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  2,  2,  2,  2,  1,  2,  3,  1,  5,  5,  5,  5,  1,  3,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  2,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  1,  1,  1,  5,  8,  8,  5,  1,  1,  1,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  1,  1,  1,  5,  8,  8,  5,  1,  1,  1,  1,  1,  1,  1,  1,  2,  8,  8,  8,  8,  8,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  2,  2,  1,  1,  2,  2,  2,  1,  5,  5,  5,  5,  1,  2,  2,  1,  1,  1,  1,  1,  2,  8,  8,  8,  8,  8,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,  1,  2,  3,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  1,  2,  2,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  1,  1,  2,  1,  1,  1,  1,  1,  2,  5,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  2,  1,  1,  1,  1,  2,  1,  1,  1,  1,  2,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  5,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  1,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,  2,  1,  1,  1,  1,  1,  1,  1,  2,  5,  5,  5,  5,  5,  5,  5,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  1,  5,  5,  1,  1,  2,  1,  2,  1,  1,  1,  1,  2,  1,  1,  2,  2,  2,  2,  2,  2,  5,  5,  5,  5,  5,  5,  5,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  5,  5,  5,  5,  1,  1,  1,  2,  1,  1,  1,  1,  2,  1,  1,  2,  1,  1,  2,  1,  2,  5,  5,  5,  5,  5,  5,  5,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  5,  5,  5,  5,  1,  1,  1,  2,  2,  1,  1,  2,  2,  1,  1,  1,  1,  1, 11,  1,  2,  5,  5,  5,  5,  5,  5,  5,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  5,  5,  5,  5,  5,  1,  1,  2,  1,  1,  1,  1,  2,  1,  1,  2,  1,  1,  2,  1,  2,  5,  5,  5,  5,  5,  5,  5,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  5,  5,  5,  5,  5,  5,  5,  3, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,  5,  5,  3,  3,  3,  3,  3,  3,  3,  3,  1,  1,  3,  3,  3,  3,  3,  3,  3,  3,  3,  5,  5,  5,  5,  5,  5,  5,  5, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    { 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  1,  1,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1, 11, 11, 11, 11, 11, 11,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  2,  1,  1,  1,  1,  1,  1,  2,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1, 11,  1, 11, 11,  1, 11,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  1,  1,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  2,  2,  2,  2,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  1,  1,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2, 15,  1,  1,  2,  1,  1,  2,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  1,  1,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  2,  1,  1,  2,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  2,  2,  2, 10,  2,  2,  2,  2,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  2,  1,  1,  2,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  1,  1,  1,  1, 16,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  1,  2,  1,  1,  1,  1,  1,  1,  2,  1,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 },
    {  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9 }
};

const int cnTantegelChests = 9;
// fields corespond to:
// 0 = nItemType
// 1 = nGoldMin
// 2 = nGoldMax
// 3 = nPositionY
// 4 = nPositionX
int nTantegelChestList[cnTantegelChests][cnChestAttributes] = {
    { cnItemNone,                 0,  0,  0,  0 },
    { cnItemGold,                 6, 13, 20, 15 },
    { cnItemGold,                 6, 13, 21, 16 },
    { cnItemGold,                 6, 13, 22, 15 },
    { cnItemGold,                 6, 13, 22, 17 },
    { cnItemStoneOfSunlight,      0,  0, 56, 41 },
    { cnItemGold,               120,120, 54, 17 },     // These last three are reserved for when the player first starts the game.
    { cnItemTorch,                0,  0, 54, 18 },
    { cnItemKey,                  0,  0, 51, 19 }      
};

const int cnTantegelActors = 27;
// values corespond to:
// 0 = Does the actor actually exist
// 1 = nCostume
// 2 = nInitialPositionY
// 3 = nInitialPositionX
// 4 = nMovementPattern
// 5 = bIsMerchant - not really using this.  May just keep here for later use.
// 6 = nConversation

int nTantegelActorList[cnTantegelActors][cnBasicActorAttributes] = {
    {  1, 12, 53, 16,  0,  0,  1 },      // King
    {  1,  1, 56, 16,  0,  0,  2 },      // Stationary Soldier 1
    {  1,  1, 56, 18,  0,  0,  3 },      // Stationary Soldier 2
    {  1,  1, 55, 20,  5,  0,  4 },      // Mobile Soldier
    {  0, 12, 53, 19,  0,  0,  0 },      // Princess
    {  1,  1, 13, 22,  0,  0,  5 },      // Stationary gray Soldier 1
    {  1,  1, 15, 22,  0,  0,  6 },      // Stationary gray Soldier 2
    {  1,  1, 34, 23,  0,  0,  7 },      // Stationary gray Soldier 3
    {  1,  1, 34, 26,  0,  0,  7 },      // Stationary gray Soldier 4
    {  1,  1, 27, 29,  0,  0,  8 },      // Stationary gray Soldier 5
    {  1,  1, 22, 40,  0,  0, 18 },      // Stationary gray Soldier 6
    {  1, 15, 17, 25,  5,  0,  9 },      // Blue walking man
    {  1, 15, 19, 22,  5,  0,  8 },      // Blue walking woman
    {  1,  1, 24, 33,  5,  0, 10 },      // Mobile gray Soldier 1
    {  1,  1,  9, 32,  5,  0, 11 },      // Mobile gray Soldier 2
    {  1,  1, 21, 16,  5,  0, 16 },      // Mobile gray Soldier 3 - in "Treasure Room"
    {  1,  1, 33, 34,  0,  0, 12 },      // Stationary gray Wizard
    {  1,  2, 28, 17,  5,  0, 13 },      // Green walking man 1
    {  1,  2, 32, 20,  5,  0, 14 },      // Green walking man 2
    {  1, 15, 15, 16,  0,  0, 15 },      // Blue stationary man
    {  1, 16, 18, 39,  5,  0, 17 },      // Mobile Red Soldier 1
    {  1, 16, 28, 38,  5,  0, 20 },      // Mobile Red Soldier 2
    {  1,  1, 19, 29,  3,  0, 19 },      // Stationary gray Wizard
    {  1,  1, 57, 41,  0,  0, 22 },      // Wizard in cellar
    {  1, 15, 12, 41,  0,  0, 21 },      // Stationary Blue woman
    {  1,  2,  8, 38,  5,  0, 23 }       // Magic key seller
};

const int cnTantegelStairs = 4;

// Values corespond to:
// nStairOriginY
// nStairOriginX
// nStairDestinationY
// nStairDestinationX
// *nStairDestinationMap

int nTantegelStairArray[cnTantegelStairs][cnStairAttributes] = {
    { 58, 21, 7, 7, cnMapTantegel, false },     // Throne room to F1
    { 14, 21, 51, 7, cnMapTantegel, false },        // F1 to Throne Room
    { 36, 43, 48, 23, cnMapTantegel, false },       // F1 to B1
    { 55, 37, 29, 29, cnMapTantegel, false }        // B1 to F1
};

#endif // MAP_TANTEGEL_H